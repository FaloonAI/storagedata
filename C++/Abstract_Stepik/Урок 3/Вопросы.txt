Что такое .hpp/.h?

Файлы с расширениями .h (чаще для C) и .hpp (чаще для C++) — это так называемые заголовочные файлы (header files) в языках программирования C и C++.

Основное назначение заголовочных файлов:

Декларации (объявления): Они содержат объявления (declarations) функций, классов, структур, констант, типов данных и макросов, но не их определения (definitions). Определения (то есть реализация кода функций, методов классов и т.д.) обычно находятся в соответствующих файлах реализации с расширением .c или .cpp.

Разделение интерфейса и реализации: Заголовочные файлы позволяют отделить "что делает" код (интерфейс) от "как он это делает" (реализация). Это улучшает модульность, читаемость и упрощает управление крупными проектами.

Повторное использование кода: Если вы хотите использовать функцию или класс, определенные в одном .cpp файле, в другом .cpp файле, вы включаете (с помощью директивы #include) соответствующий заголовочный файл в каждый из этих .cpp файлов. Это гарантирует, что компилятор знает о существовании и сигнатуре (параметрах и возвращаемом типе) этих элементов до того, как они будут использованы.

Ускорение компиляции: Когда вы меняете только реализацию функции в .cpp файле, вам не нужно перекомпилировать все .cpp файлы, которые используют эту функцию. Достаточно перекомпилировать только измененный .cpp файл, а затем повторно скомпоновать (линковать) программу. Это значительно сокращает время сборки больших проектов.

Защита от повторного включения (Include Guards): Поскольку заголовочные файлы могут включаться в несколько других файлов, существует риск их многократного включения в одну единицу компиляции, что приведет к ошибкам "redefinition". Для предотвращения этого используются "стражи включения" (include guards) — специальные директивы препроцессора (#ifndef, #define, #endif).

Разница между .h и .hpp:

Формально, с точки зрения компилятора, нет никакой разницы между .h и .hpp. Это всего лишь соглашение об именовании (конвенция).

.h: Исторически используется для заголовочных файлов как в C, так и в C++. Часто применяется в проектах, которые могут быть совместимы с обоими языками, или в старых C++ проектах.

.hpp: Становится все более популярным для заголовочных файлов, предназначенных исключительно для C++. Это помогает явно указать, что файл содержит C++-специфичный код (например, классы, шаблоны, пространства имен) и не предназначен для включения в чистые C-файлы. Многие современные библиотеки, такие как Boost, используют .hpp.